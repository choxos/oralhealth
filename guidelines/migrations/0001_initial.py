# Generated by Django 5.0.1 on 2025-08-06 11:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EvidenceQuality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                ("order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Guideline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(db_index=True, max_length=500)),
                ("publication_year", models.PositiveIntegerField(db_index=True)),
                ("last_updated", models.DateField(blank=True, null=True)),
                ("url", models.URLField(max_length=1000)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-publication_year", "title"],
            },
        ),
        migrations.CreateModel(
            name="RecommendationStrength",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                ("order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=100, unique=True)),
                ("code", models.CharField(db_index=True, max_length=10, unique=True)),
            ],
            options={
                "verbose_name_plural": "Countries",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["code"], name="guidelines__code_c9a9d4_idx"),
                    models.Index(fields=["name"], name="guidelines__name_3c25e1_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=500)),
                ("number", models.PositiveIntegerField()),
                ("content", models.TextField(blank=True)),
                (
                    "guideline",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chapters",
                        to="guidelines.guideline",
                    ),
                ),
            ],
            options={
                "ordering": ["number"],
                "unique_together": {("guideline", "number")},
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=200)),
                ("website", models.URLField(blank=True)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organizations",
                        to="guidelines.country",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="guideline",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="guidelines",
                to="guidelines.organization",
            ),
        ),
        migrations.CreateModel(
            name="Recommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(db_index=True, max_length=500)),
                ("text", models.TextField()),
                (
                    "keywords",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated keywords for search",
                        max_length=1000,
                    ),
                ),
                ("target_population", models.CharField(blank=True, max_length=500)),
                ("clinical_context", models.CharField(blank=True, max_length=500)),
                ("source_url", models.URLField(blank=True, max_length=1000)),
                ("page_number", models.PositiveIntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "chapter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recommendations",
                        to="guidelines.chapter",
                    ),
                ),
                (
                    "evidence_quality",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recommendations",
                        to="guidelines.evidencequality",
                    ),
                ),
                (
                    "guideline",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to="guidelines.guideline",
                    ),
                ),
                (
                    "strength",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recommendations",
                        to="guidelines.recommendationstrength",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RecommendationReference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("url", models.URLField(blank=True, max_length=1000)),
                (
                    "pmid",
                    models.CharField(blank=True, help_text="PubMed ID", max_length=20),
                ),
                ("doi", models.CharField(blank=True, max_length=100)),
                (
                    "recommendation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="references",
                        to="guidelines.recommendation",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=255, unique=True)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="guidelines.topic",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="recommendation",
            name="topics",
            field=models.ManyToManyField(
                blank=True, related_name="recommendations", to="guidelines.topic"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(fields=["name"], name="guidelines__name_747d97_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["country"], name="guidelines__country_1bcbd7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="guideline",
            index=models.Index(
                fields=["publication_year"], name="guidelines__publica_912321_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="guideline",
            index=models.Index(
                fields=["is_active"], name="guidelines__is_acti_c0dfef_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="guideline",
            index=models.Index(
                fields=["organization"], name="guidelines__organiz_d8d32f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="guideline",
            index=models.Index(
                fields=["-created_at"], name="guidelines__created_681e75_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="topic",
            index=models.Index(fields=["slug"], name="guidelines__slug_354831_idx"),
        ),
        migrations.AddIndex(
            model_name="topic",
            index=models.Index(fields=["name"], name="guidelines__name_57aaac_idx"),
        ),
        migrations.AddIndex(
            model_name="topic",
            index=models.Index(
                fields=["parent"], name="guidelines__parent__93e5a3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="recommendation",
            index=models.Index(fields=["title"], name="guidelines__title_1bd62a_idx"),
        ),
        migrations.AddIndex(
            model_name="recommendation",
            index=models.Index(
                fields=["strength"], name="guidelines__strengt_c36d76_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="recommendation",
            index=models.Index(
                fields=["evidence_quality"], name="guidelines__evidenc_bd6857_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="recommendation",
            index=models.Index(
                fields=["guideline"], name="guidelines__guideli_862b77_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="recommendation",
            index=models.Index(
                fields=["-created_at"], name="guidelines__created_720158_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="recommendation",
            index=models.Index(
                fields=["keywords"], name="guidelines__keyword_dbaef4_idx"
            ),
        ),
    ]
